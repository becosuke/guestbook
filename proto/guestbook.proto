syntax = "proto3";

package pb;

option go_package = "github.com/becosuke/guestbook/internal/pkg/pb";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "validate/validate.proto";

service GuestbookService {
  rpc GetPost (GetPostRequest) returns (Post) {
    option (google.api.http) = {
      get: "/v1/post/{serial}"
    };
  }
  rpc CreatePost (CreatePostRequest) returns (Post) {
    option (google.api.http) = {
      post: "/v1/post"
      body: "*"
    };
  }
  rpc UpdatePost (UpdatePostRequest) returns (Post) {
    option (google.api.http) = {
      put: "/v1/post/{post.serial}"
      body: "*"
    };
  }
  rpc DeletePost (DeletePostRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/post/{serial}"
    };
  }
  rpc ListPosts (ListPostsRequest) returns (ListPostsResponse) {
    option (google.api.http) = {
      get: "/v1/posts/list/{page_size}/{page_token}"
    };
  }
}

message GetPostRequest {
  int64 serial = 1;
}
message CreatePostRequest {
  Post post = 1 [(validate.rules).message.required = true];
}
message UpdatePostRequest {
  Post post = 1 [(validate.rules).message.required = true];
  google.protobuf.FieldMask field_mask = 2;
}
message DeletePostRequest {
  int64 serial = 1;
}
message ListPostsRequest {
  int32 page_size = 1 [(validate.rules).int32.gt = 0];
  string page_token = 2 [(validate.rules).string.ignore_empty = true];
}
message ListPostsResponse {
  repeated Post posts = 1;
  string next_page_token = 2;
}

message Post {
  int64 serial = 1;
  string body = 2 [(validate.rules).string = {min_len: 1, max_len: 128}];
}
